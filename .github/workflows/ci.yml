name: CI
on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "*.*.*"

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ matrix.scala_version }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-
      - name: Build
        run: sbt compile packageBin packageDoc packageSrc
      - name: Test
        run: sbt test
      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: '*/target/'
          retention-days: 1
  publish:
    if: github.event_name != 'pull_request'
    needs: build-and-test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ matrix.scala_version }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-
      - uses: actions/download-artifact@v2
        with:
          name: target
      - name: Publish to Sonatype
        run: bash publish.sh
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
  release:
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: target
      - name: Upload assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          tag="${GITHUB_REF#refs/tags/}"
          args=$(printf -- "-a %q " {xtract-core,testing,macros}/target/*/*.jar)
          hub release create $args -m "Release $tag" $tag
